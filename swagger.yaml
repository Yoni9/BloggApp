openapi: 3.0.3
info:
  title: Blog API
  description: API for managing blog posts
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Blog:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
paths:
  /users:
    post:
      summary: Add a new user
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User added successfully
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid request body

  /blogs:
    get:
      summary: Get all blogs
      operationId: getAllBlogs
      responses:
        '200':
          description: A list of all blogs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blog'
    post:
      summary: Add a new blog
      operationId: addBlog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: Blog added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Blog added successfully
                  data:
                    $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid request body

  /blogs/{id}:
    put:
      summary: Edit a blog
      operationId: editBlog
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the blog to edit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
      responses:
        '200':
          description: Blog edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Blog edited successfully
                  data:
                    $ref: '#/components/schemas/Blog'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid request


    delete:
      summary: Delete a blog
      operationId: deleteBlog
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the blog to delete
      responses:
        '200':
          description: Blog deleted successfully
          content:
            application/json:
